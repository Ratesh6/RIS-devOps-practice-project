services:
  user-db:
    image: postgres:14
    environment:
      POSTGRES_DB: user_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    volumes:
      - ./database/init-scripts/user-service:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  task-db:
    image: postgres:14
    environment:
      POSTGRES_DB: task_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    volumes:
      - ./database/init-scripts/task-service:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  user-service:
    build:
      context: ./user-service
    env_file:
      - ./user-service/.env
    depends_on:
      user-db:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      - backend

  task-service:
    build:
      context: ./task-service
    env_file:
      - ./task-service/.env
    depends_on:
      task-db:
        condition: service_healthy
    ports:
      - "8001:8001"
    networks:
      - backend

  gateway-service:
    build:
      context: ./gateway-service
    env_file:
      - ./gateway-service/.env
    depends_on:
      - user-service
      - task-service
    ports:
      - "8003:8003"
    networks:
      - backend

  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - gateway-service
    networks:
      - backend

networks:
  backend: